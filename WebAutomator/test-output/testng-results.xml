<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="5" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="49890" started-at="2017-08-31T15:13:29Z" finished-at="2017-08-31T15:14:19Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="49890" started-at="2017-08-31T15:13:29Z" finished-at="2017-08-31T15:14:19Z">
      <class name="TestSuites.HomePage">
        <test-method status="PASS" signature="basePageNavigation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestSuites.HomePage@1fb19a0]" name="basePageNavigation" duration-ms="7486" started-at="2017-08-31T10:13:36Z" data-provider="getData" finished-at="2017-08-31T10:13:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[nonrestricteduser@qw.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Restrcited User]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestSuites.HomePage@1fb19a0]" name="getResult" is-config="true" duration-ms="2" started-at="2017-08-31T10:13:43Z" finished-at="2017-08-31T10:13:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=basePageNavigation status=SUCCESS method=HomePage.basePageNavigation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestSuites.HomePage@1fb19a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="basePageNavigation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestSuites.HomePage@1fb19a0]" name="basePageNavigation" duration-ms="3353" started-at="2017-08-31T10:13:43Z" data-provider="getData" finished-at="2017-08-31T10:13:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[restricteduser@qw.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[456788]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Non restricted user]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestSuites.HomePage@1fb19a0]" name="getResult" is-config="true" duration-ms="0" started-at="2017-08-31T10:13:47Z" finished-at="2017-08-31T10:13:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=basePageNavigation status=SUCCESS method=HomePage.basePageNavigation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestSuites.HomePage@1fb19a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="demoReportFail()[pri:0, instance:TestSuites.HomePage@1fb19a0]" name="demoReportFail" duration-ms="2" started-at="2017-08-31T10:13:47Z" finished-at="2017-08-31T10:13:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at TestSuites.HomePage.demoReportFail(HomePage.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demoReportFail -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestSuites.HomePage@1fb19a0]" name="getResult" is-config="true" duration-ms="2" started-at="2017-08-31T10:13:47Z" finished-at="2017-08-31T10:13:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoReportFail status=FAILURE method=HomePage.demoReportFail()[pri:0, instance:TestSuites.HomePage@1fb19a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="demoReportPass()[pri:0, instance:TestSuites.HomePage@1fb19a0]" name="demoReportPass" duration-ms="1" started-at="2017-08-31T10:13:47Z" finished-at="2017-08-31T10:13:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demoReportPass -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestSuites.HomePage@1fb19a0]" name="getResult" is-config="true" duration-ms="0" started-at="2017-08-31T10:13:47Z" finished-at="2017-08-31T10:13:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoReportPass status=SUCCESS method=HomePage.demoReportPass()[pri:0, instance:TestSuites.HomePage@1fb19a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- TestSuites.HomePage -->
      <class name="TestSuites.CaptureScreenshot">
        <test-method status="PASS" signature="init()[pri:0, instance:TestSuites.CaptureScreenshot@6ee4d9ab]" name="init" is-config="true" duration-ms="6324" started-at="2017-08-31T10:13:29Z" finished-at="2017-08-31T10:13:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:TestSuites.HomePage@1fb19a0]" name="initialize" is-config="true" duration-ms="766" started-at="2017-08-31T10:13:35Z" finished-at="2017-08-31T10:13:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="captureScreenShot()[pri:0, instance:TestSuites.CaptureScreenshot@6ee4d9ab]" name="captureScreenShot" duration-ms="30411" started-at="2017-08-31T10:13:47Z" finished-at="2017-08-31T10:14:17Z">
          <exception class="junit.framework.ComparisonFailure">
            <message>
              <![CDATA[expected:<... - Automation Test> but was:<...-Selenium Webdriver Appium Complete Tutorial>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.ComparisonFailure: expected:<... - Automation Test> but was:<...-Selenium Webdriver Appium Complete Tutorial>
	at junit.framework.Assert.assertEquals(Assert.java:81)
	at junit.framework.Assert.assertEquals(Assert.java:87)
	at TestSuites.CaptureScreenshot.captureScreenShot(CaptureScreenshot.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenShot -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestSuites.CaptureScreenshot@6ee4d9ab]" name="getResult" is-config="true" duration-ms="947" started-at="2017-08-31T10:14:17Z" finished-at="2017-08-31T10:14:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=captureScreenShot status=FAILURE method=CaptureScreenshot.captureScreenShot()[pri:0, instance:TestSuites.CaptureScreenshot@6ee4d9ab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:TestSuites.CaptureScreenshot@6ee4d9ab]" name="endReport" is-config="true" duration-ms="410" started-at="2017-08-31T10:14:18Z" finished-at="2017-08-31T10:14:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:TestSuites.HomePage@1fb19a0]" name="teardown" is-config="true" duration-ms="166" started-at="2017-08-31T10:14:18Z" finished-at="2017-08-31T10:14:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- TestSuites.CaptureScreenshot -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
